Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Jun 11 22:50:49 2022

@author: yf
"""

import pygmt
import numpy as np

Vs_path = '../files/longmen/Vs.xyz'
Reloc_path = '../files/longmen/cd.reloc'

dep=[0.00,  0.200,  0.400,  0.600,  0.8, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.5, 3, 4, 5, 6, 7, 8, 9 ]
start=[[103.67,31.36], [103.6,31.26], [103.47,31.25], [103.4,31.18], [103.34,31.1], [103.28,30.95]]
end=[[104.07,30.96], [104,30.86], [103.87,30.85], [103.8,30.78], [103.74,30.7], [103.68,30.55]]

region=[103.2, 104.1, 30.5, 31.4]

# 1. read data
data = np.loadtxt(Vs_path)

dep_info = [0]
for i in range(1,len(data)):
    if data[i][2] != data[i-1][2]:
        dep_info.append(i)
dep_info.append(len(data))

reloc = np.loadtxt(Reloc_path)
reloc_all=[]
for i in range(0,len(start)):
    data1=np.vstack((reloc[:,2], reloc[:,1],reloc[:,3])).T
    earthquakes = pygmt.project(data=data1, center=start[i], endpoint=end[i], convention='xyz', width='-0.05/0.05')
    reloc_all.append(earthquakes)

# 2. track lines info
track_lines = []
for i in range(0,len(start)):  # loop lines    
    track_all=[]
    for j in range(0,len(dep_info)-1):  # loop depth
        points = pygmt.project(center=start[i], endpoint=end[i], generate='0.02')
        pygmt.surface(
            x=data[dep_info[j]:dep_info[j+1],0], 
            y=data[dep_info[j]:dep_info[j+1],1], 
            z=data[dep_info[j]:dep_info[j+1],3],
            region=region,
            nodata="o9999",
            spacing="0.02",
            outgrid="../files/longmen/sample.nc")
        track = pygmt.grdtrack(points=points, grid="../files/longmen/sample.nc", newcolname="vs")
        track_all.append( [np.array(track.r), np.array(track.s), dep[j]*np.ones(len(np.array(track.r))), np.array(track.vs)]  )
    # print("i=",i,"\n")
    track_lines.append(track_all)

# 4. colorbar
pygmt.makecpt(cmap="jet",reverse=True, background=True, series=[2.2, 3.7, 0.01],output="../files/longmen/temp_cpt.cpt")

# 3. plot fig
fig = pygmt.Figure()
with fig.subplot(
    nrows=3,
    ncols=2,
    figsize=("25c", "11c"),
    autolabel=True,
    frame=["af", "WSne"],
    margins=["0.1c", "0.2c"],
    # title="My Subplot Heading",
):
    
    for i in range(0,len(start)):  # loop lines 
        # a. 剖面的信息
        Lon=[]
        Lat=[]
        Dep=[]
        Vs=[]
        for j in range(0,len(dep_info)-1):
            lon=track_lines[i][j][0].tolist()
            lat=track_lines[i][j][1].tolist()
            dep=track_lines[i][j][2].tolist()
            vs=track_lines[i][j][3].tolist()
            Lon=Lon+lon
            Lat=Lat+lat
            Dep=Dep+dep
            Vs=Vs+vs
        # Lon.reverse()
        # Lat.reverse()
        # Dep.reverse()
        # Vs.reverse()
        # b. 剖面插值
        pygmt.surface(
            x=Lon, 
            y=Dep, 
            z=Vs,
            region=[start[i][0], end[i][0], 0, 9],
            nodata="o9999",
            spacing="0.002/0.1",
            outgrid="../files/longmen/sample1.nc"
            )
        # c.剖面画图
        with pygmt.config(
            PS_PAGE_ORIENTATION='landscape', 
            PROJ_LENGTH_UNIT='inch', 
            MAP_FRAME_TYPE='plain', 
            MAP_TICK_LENGTH='0.0c', 
            MAP_FRAME_PEN='2p', 
            FONT_ANNOT_PRIMARY='10p,Helvetica,black', 
            FONT_HEADING='15p,Helvetica,black', 
            FONT_LABEL='8p,Helvetica,black'):

            xx=i//2
            yy=i%2
            fig.basemap(
                zsize='-4i',
                region=[start[i][0], end[i][0], 0, 9], 
                projection='X10c/-3c',
                frame=['xafg+l"Longtitude"','yafg+l"Depth (km)"'],
                panel=[xx, yy])

            fig.grdimage(
                # img_in='D',
                projection='X10c/-3c', 
                region=[start[i][0], end[i][0], 0, 9], 
                grid="../files/longmen/sample1.nc",
                cmap="../files/longmen/temp_cpt.cpt",
                )
            
            fig.plot(x=reloc_all[i][0], y=reloc_all[i][2], no_clip=False,style='c0.1c',color="black",pen=True,panel=[xx, yy])

fig.colorbar(cmap="../files/longmen/temp_cpt.cpt",position="JMB+o4c/1c+w8c", frame=["xa0.5f0.25", 'y+l"Vs (km/s)"'])
fig.show()
# fig.savefig('yf.pdf')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mGMTCLibNotFoundError[0m                      Traceback (most recent call last)
Cell [0;32mIn[1], line 9[0m
[1;32m      1[0m [38;5;66;03m#!/usr/bin/env python3[39;00m
[1;32m      2[0m [38;5;66;03m# -*- coding: utf-8 -*-[39;00m
[1;32m      3[0m [38;5;124;03m"""[39;00m
[1;32m      4[0m [38;5;124;03mCreated on Sat Jun 11 22:50:49 2022[39;00m
[1;32m      5[0m 
[1;32m      6[0m [38;5;124;03m@author: yf[39;00m
[1;32m      7[0m [38;5;124;03m"""[39;00m
[0;32m----> 9[0m [38;5;28;01mimport[39;00m [38;5;21;01mpygmt[39;00m
[1;32m     10[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m     12[0m Vs_path [38;5;241m=[39m [38;5;124m'[39m[38;5;124m../files/longmen/Vs.xyz[39m[38;5;124m'[39m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/__init__.py:74[0m
[1;32m     71[0m __commit__ [38;5;241m=[39m __version__[38;5;241m.[39msplit([38;5;124m"[39m[38;5;124m+g[39m[38;5;124m"[39m)[[38;5;241m-[39m[38;5;241m1[39m] [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124m+g[39m[38;5;124m"[39m [38;5;129;01min[39;00m __version__ [38;5;28;01melse[39;00m [38;5;124m"[39m[38;5;124m"[39m  [38;5;66;03m# 0ab3cd78[39;00m
[1;32m     73[0m [38;5;66;03m# Start our global modern mode session[39;00m
[0;32m---> 74[0m [43m_begin[49m[43m([49m[43m)[49m
[1;32m     75[0m [38;5;66;03m# Tell Python to run _end when shutting down[39;00m
[1;32m     76[0m _atexit[38;5;241m.[39mregister(_end)

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/session_management.py:16[0m, in [0;36mbegin[0;34m()[0m
[1;32m      8[0m [38;5;124;03m"""[39;00m
[1;32m      9[0m [38;5;124;03mInitiate a new GMT modern mode session.[39;00m
[1;32m     10[0m 
[0;32m   (...)[0m
[1;32m     13[0m [38;5;124;03mOnly meant to be used once for creating the global session.[39;00m
[1;32m     14[0m [38;5;124;03m"""[39;00m
[1;32m     15[0m prefix [38;5;241m=[39m [38;5;124m"[39m[38;5;124mpygmt-session[39m[38;5;124m"[39m
[0;32m---> 16[0m [38;5;28;01mwith[39;00m Session() [38;5;28;01mas[39;00m lib:
[1;32m     17[0m     lib[38;5;241m.[39mcall_module(module[38;5;241m=[39m[38;5;124m"[39m[38;5;124mbegin[39m[38;5;124m"[39m, args[38;5;241m=[39mprefix)
[1;32m     18[0m     [38;5;66;03m# pygmt relies on GMT modern mode with GMT_COMPATIBILITY at version 6[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/session.py:187[0m, in [0;36mSession.__enter__[0;34m(self)[0m
[1;32m    174[0m [38;5;28;01mdef[39;00m [38;5;21m__enter__[39m([38;5;28mself[39m):
[1;32m    175[0m     [38;5;124;03m"""[39;00m
[1;32m    176[0m [38;5;124;03m    Create a GMT API session and check the libgmt version.[39;00m
[1;32m    177[0m 
[0;32m   (...)[0m
[1;32m    185[0m [38;5;124;03m        raising the exception.[39;00m
[1;32m    186[0m [38;5;124;03m    """[39;00m
[0;32m--> 187[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcreate[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mpygmt-session[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m    188[0m     [38;5;66;03m# Need to store the version info because 'get_default' won't work after[39;00m
[1;32m    189[0m     [38;5;66;03m# the session is destroyed.[39;00m
[1;32m    190[0m     version [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39minfo[[38;5;124m"[39m[38;5;124mversion[39m[38;5;124m"[39m]

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/session.py:334[0m, in [0;36mSession.create[0;34m(self, name)[0m
[1;32m    331[0m [38;5;28;01mexcept[39;00m GMTCLibNoSessionError:
[1;32m    332[0m     [38;5;28;01mpass[39;00m
[0;32m--> 334[0m c_create_session [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_libgmt_func[49m[43m([49m
[1;32m    335[0m [43m    [49m[38;5;124;43m"[39;49m[38;5;124;43mGMT_Create_Session[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    336[0m [43m    [49m[43margtypes[49m[38;5;241;43m=[39;49m[43m[[49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_char_p[49m[43m,[49m[43m [49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_uint[49m[43m,[49m[43m [49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_uint[49m[43m,[49m[43m [49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_void_p[49m[43m][49m[43m,[49m
[1;32m    337[0m [43m    [49m[43mrestype[49m[38;5;241;43m=[39;49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_void_p[49m[43m,[49m
[1;32m    338[0m [43m[49m[43m)[49m
[1;32m    340[0m [38;5;66;03m# Capture the output printed by GMT into this list. Will use it later[39;00m
[1;32m    341[0m [38;5;66;03m# to generate error messages for the exceptions raised by API calls.[39;00m
[1;32m    342[0m [38;5;28mself[39m[38;5;241m.[39m_error_log [38;5;241m=[39m []  [38;5;66;03m# pylint: disable=attribute-defined-outside-init[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/session.py:286[0m, in [0;36mSession.get_libgmt_func[0;34m(self, name, argtypes, restype)[0m
[1;32m    249[0m [38;5;124;03m"""[39;00m
[1;32m    250[0m [38;5;124;03mGet a ctypes function from the libgmt shared library.[39;00m
[1;32m    251[0m 
[0;32m   (...)[0m
[1;32m    282[0m [38;5;124;03m<class 'ctypes.CDLL.__init__.<locals>._FuncPtr'>[39;00m
[1;32m    283[0m [38;5;124;03m"""[39;00m
[1;32m    284[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mhasattr[39m([38;5;28mself[39m, [38;5;124m"[39m[38;5;124m_libgmt[39m[38;5;124m"[39m):
[1;32m    285[0m     [38;5;66;03m# pylint: disable=attribute-defined-outside-init[39;00m
[0;32m--> 286[0m     [38;5;28mself[39m[38;5;241m.[39m_libgmt [38;5;241m=[39m [43mload_libgmt[49m[43m([49m[43m)[49m
[1;32m    287[0m function [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m[38;5;241m.[39m_libgmt, name)
[1;32m    288[0m [38;5;28;01mif[39;00m argtypes [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/loading.py:59[0m, in [0;36mload_libgmt[0;34m(lib_fullnames)[0m
[1;32m     56[0m         failing_libs[38;5;241m.[39mappend(libname)
[1;32m     58[0m [38;5;28;01mif[39;00m error:
[0;32m---> 59[0m     [38;5;28;01mraise[39;00m GMTCLibNotFoundError([38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(error_msg))
[1;32m     61[0m [38;5;28;01mreturn[39;00m libgmt

[0;31mGMTCLibNotFoundError[0m: Error loading GMT shared library at 'libgmt.so'.
libgmt.so: cannot open shared object file: No such file or directory
GMTCLibNotFoundError: Error loading GMT shared library at 'libgmt.so'.
libgmt.so: cannot open shared object file: No such file or directory

