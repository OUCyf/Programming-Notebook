Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Mar  6 14:41:09 2022

@author: yf
"""

import os
import pygmt
import lune
import numpy as np
import xarray as xr
import MomentTensor as MTpy

#%%# 1. input parameters
path='../files/lune/'
MPI_n = 20                       # total MPI cores
chain_n = 1                     # total chain in each core
N =  0                           # from N to compute in each chain

marker = [["DC",0,0,"0.4c/0.4c"], ["CLVD",-30,0,"-0.6c/0c"], ["CLVD",30,0,"0.6c/0c"],
          ["ISO",0,-90,"0.0c/-0.3c"], ["ISO",0,90,"0.0c/0.3c"], 
          ["LVD",-30,35,"-0.5c/0c"], ["LVD",30,-35,"0.5c/0c"],
          ["_",-30,-55,"-0.3c/0c"], ["_",30,55,"0.3c/0c"], 
          ["C(nu=0.25)",-30,60,"-1.1c/0c"], ["C(nu=0.25)",30,-60,"1.1c/0c"]]

#%% 2. read data
# all
Misfit_np = np.array([])
Mxx_np = np.array([]); Mxy_np = np.array([]); Mxz_np = np.array([])
Myy_np = np.array([]); Myz_np = np.array([]); Mzz_np = np.array([])
for i in range(0,MPI_n,1):
    rank_path = os.path.join(path,'rank_'+str(i)+'_output')
    for j in range(0,chain_n,1):
        FM_path = os.path.join(rank_path,'chain_'+str(j)+'_FM_2_accept_all')
        MISFIT_path = os.path.join(rank_path,'chain_'+str(j)+'_MISFIT_2_accept_all')
        # 2-d
        FM = np.loadtxt(FM_path)[N:,:]
        Mxx_np = np.hstack((Mxx_np, FM[:,1]))
        Mxy_np = np.hstack((Mxy_np, FM[:,2]))
        Mxz_np = np.hstack((Mxz_np, FM[:,3]))
        Myy_np = np.hstack((Myy_np, FM[:,4]))
        Myz_np = np.hstack((Myz_np, FM[:,5]))
        Mzz_np = np.hstack((Mzz_np, FM[:,6]))
        # 1-d
        MISFIT = np.loadtxt(MISFIT_path)[N:]
        Misfit_np = np.hstack((Misfit_np,MISFIT))

# mean
FM_mean_NED = np.array([np.mean(Mxx_np), 
                    np.mean(Myy_np),
                    np.mean(Mzz_np),
                    np.mean(Mxy_np), 
                    np.mean(Mxz_np), 
                    np.mean(Myz_np), ])
FM_mean_USE = MTpy.mt_convert(FM_mean_NED, old="NED", new="USE")


#%% 3. compute gamma and delta
# lam = lune.lune2lam(gamma, delta, M0)
Lsort,Vsort = lune.eig(lune.mat(FM_mean_USE))
gamma_mean, delta_mean, M0 = lune.lam2lune(Lsort)
focal_mechanism = np.hstack((gamma_mean,delta_mean,10,FM_mean_USE,22)) # depth = 10 in [lon, lat, depth, MT_USE, exp]

gamma_all=[]; delta_all=[]
for i in range(0,len(Mxx_np)):
    FM = [Mxx_np[i], Myy_np[i], Mzz_np[i], Mxy_np[i], Mxz_np[i],  Myz_np[i]]
    lsort,vsort = lune.eig(lune.mat(FM))
    gamma, delta, M0 = lune.lam2lune(lsort)
    gamma_all.append(gamma)
    delta_all.append(delta)

H, lon, lat = np.histogram2d(gamma_all,delta_all, bins=(20, 20),density=True)
H = H/np.max(H)

data = xr.DataArray(
    data=H.T,
    dims=["lat", "lon"],  # do not mix up the order of lat and lon
    coords=dict(
        lon=(["lon"], lon[0:-1]),
        lat=(["lat"], lat[0:-1]),
    ),
    attrs=dict(
        description="Statistical diagram",
        units="degree",
    ),
)


#%% 4. gmt plot
fig = pygmt.Figure()

xyzdata = pygmt.grd2xyz(data)
xyzdata_np = xyzdata.to_numpy()
pygmt.makecpt(cmap="hot",reverse=True, series=[0, 1, 0.02],output="../files/lune/temp_cpt1.cpt")

with pygmt.config(
        PS_PAGE_ORIENTATION='landscape', 
        PROJ_LENGTH_UNIT='inch', 
        MAP_FRAME_TYPE='plain', 
        MAP_TICK_LENGTH='0.0c', 
        MAP_FRAME_PEN='2p', 
        FONT_ANNOT_PRIMARY='12p,Helvetica,black', 
        FONT_HEADING='18p,Helvetica,black', 
        FONT_LABEL='10p,Helvetica,black'):

    # 1.basemap with lune
    fig.basemap(
                region=[-30,30,-90,90], 
                projection='H0/2.8i', 
                frame="wesn+g255/255/245")

    # 2.contour lines
    fig.contour(
        projection='H0/2.8i',
        x=xyzdata_np[:,0],
        y=xyzdata_np[:,1],
        z=xyzdata_np[:,2],
        levels= "../files/lune/temp_cpt1.cpt",
        no_clip=True,
        # annotation=0.2,
        I=True,
        )

    # 3.focal mechanism
    fig.meca(focal_mechanism,
          scale="1.0c",
          longitude=gamma_mean,
          latitude=delta_mean,
          convention='mt',
          component ="full",
          G='red')


    # 4.lines
    x,y = np.genfromtxt('../files/lune/dfiles/sourcetype_arc_01.dat', unpack=True, usecols=(0,1))
    fig.plot(x=x, y=y, pen='1p,gray,-')

    x,y = np.genfromtxt('../files/lune/dfiles/sourcetype_arc_02.dat', unpack=True, usecols=(0,1))
    fig.plot(x=x, y=y, pen='1p,gray,-')

    x,y = np.genfromtxt('../files/lune/dfiles/sourcetype_arc_03.dat', unpack=True, usecols=(0,1))
    fig.plot(x=x, y=y, pen='1p,gray,-')

    x,y = np.genfromtxt('../files/lune/dfiles/sourcetype_arc_04.dat', unpack=True, usecols=(0,1))
    fig.plot(x=x, y=y, pen='1p,gray,-')

    x,y = np.genfromtxt('../files/lune/dfiles/sourcetype_arc_05.dat', unpack=True, usecols=(0,1))
    fig.plot(x=x, y=y, pen='1p,gray,-')
    
    x,y = np.genfromtxt('../files/lune/dfiles/sourcetype_arc_06.dat', unpack=True, usecols=(0,1))
    fig.plot(x=x, y=y, pen='1p,gray,-')


    # 5.marker
    for i in range(0,len(marker)):
        text=marker[i][0]
        x=marker[i][1]
        y=marker[i][2]
        offset=marker[i][3]
        fig.text(text=text,x=x,y=y,offset=offset,no_clip=True,font="10p,Helvetica-Bold,black")
        fig.plot(x=x, y=y, no_clip=True,style='c0.2c',color="black",pen=True)


#%% 5.save
fig.colorbar(cmap="../files/lune/temp_cpt1.cpt",yshift="-0.5c",frame=["xa0.2f0.1", "y+l(marginal-posterior)"], )
fig.show()
# fig.savefig('lune_us.pdf')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mGMTCLibNotFoundError[0m                      Traceback (most recent call last)
Cell [0;32mIn[1], line 10[0m
[1;32m      3[0m [38;5;124;03m"""[39;00m
[1;32m      4[0m [38;5;124;03mCreated on Sun Mar  6 14:41:09 2022[39;00m
[1;32m      5[0m 
[1;32m      6[0m [38;5;124;03m@author: yf[39;00m
[1;32m      7[0m [38;5;124;03m"""[39;00m
[1;32m      9[0m [38;5;28;01mimport[39;00m [38;5;21;01mos[39;00m
[0;32m---> 10[0m [38;5;28;01mimport[39;00m [38;5;21;01mpygmt[39;00m
[1;32m     11[0m [38;5;28;01mimport[39;00m [38;5;21;01mlune[39;00m
[1;32m     12[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/__init__.py:74[0m
[1;32m     71[0m __commit__ [38;5;241m=[39m __version__[38;5;241m.[39msplit([38;5;124m"[39m[38;5;124m+g[39m[38;5;124m"[39m)[[38;5;241m-[39m[38;5;241m1[39m] [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124m+g[39m[38;5;124m"[39m [38;5;129;01min[39;00m __version__ [38;5;28;01melse[39;00m [38;5;124m"[39m[38;5;124m"[39m  [38;5;66;03m# 0ab3cd78[39;00m
[1;32m     73[0m [38;5;66;03m# Start our global modern mode session[39;00m
[0;32m---> 74[0m [43m_begin[49m[43m([49m[43m)[49m
[1;32m     75[0m [38;5;66;03m# Tell Python to run _end when shutting down[39;00m
[1;32m     76[0m _atexit[38;5;241m.[39mregister(_end)

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/session_management.py:16[0m, in [0;36mbegin[0;34m()[0m
[1;32m      8[0m [38;5;124;03m"""[39;00m
[1;32m      9[0m [38;5;124;03mInitiate a new GMT modern mode session.[39;00m
[1;32m     10[0m 
[0;32m   (...)[0m
[1;32m     13[0m [38;5;124;03mOnly meant to be used once for creating the global session.[39;00m
[1;32m     14[0m [38;5;124;03m"""[39;00m
[1;32m     15[0m prefix [38;5;241m=[39m [38;5;124m"[39m[38;5;124mpygmt-session[39m[38;5;124m"[39m
[0;32m---> 16[0m [38;5;28;01mwith[39;00m Session() [38;5;28;01mas[39;00m lib:
[1;32m     17[0m     lib[38;5;241m.[39mcall_module(module[38;5;241m=[39m[38;5;124m"[39m[38;5;124mbegin[39m[38;5;124m"[39m, args[38;5;241m=[39mprefix)
[1;32m     18[0m     [38;5;66;03m# pygmt relies on GMT modern mode with GMT_COMPATIBILITY at version 6[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/session.py:187[0m, in [0;36mSession.__enter__[0;34m(self)[0m
[1;32m    174[0m [38;5;28;01mdef[39;00m [38;5;21m__enter__[39m([38;5;28mself[39m):
[1;32m    175[0m     [38;5;124;03m"""[39;00m
[1;32m    176[0m [38;5;124;03m    Create a GMT API session and check the libgmt version.[39;00m
[1;32m    177[0m 
[0;32m   (...)[0m
[1;32m    185[0m [38;5;124;03m        raising the exception.[39;00m
[1;32m    186[0m [38;5;124;03m    """[39;00m
[0;32m--> 187[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcreate[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mpygmt-session[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m    188[0m     [38;5;66;03m# Need to store the version info because 'get_default' won't work after[39;00m
[1;32m    189[0m     [38;5;66;03m# the session is destroyed.[39;00m
[1;32m    190[0m     version [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39minfo[[38;5;124m"[39m[38;5;124mversion[39m[38;5;124m"[39m]

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/session.py:334[0m, in [0;36mSession.create[0;34m(self, name)[0m
[1;32m    331[0m [38;5;28;01mexcept[39;00m GMTCLibNoSessionError:
[1;32m    332[0m     [38;5;28;01mpass[39;00m
[0;32m--> 334[0m c_create_session [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_libgmt_func[49m[43m([49m
[1;32m    335[0m [43m    [49m[38;5;124;43m"[39;49m[38;5;124;43mGMT_Create_Session[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    336[0m [43m    [49m[43margtypes[49m[38;5;241;43m=[39;49m[43m[[49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_char_p[49m[43m,[49m[43m [49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_uint[49m[43m,[49m[43m [49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_uint[49m[43m,[49m[43m [49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_void_p[49m[43m][49m[43m,[49m
[1;32m    337[0m [43m    [49m[43mrestype[49m[38;5;241;43m=[39;49m[43mctp[49m[38;5;241;43m.[39;49m[43mc_void_p[49m[43m,[49m
[1;32m    338[0m [43m[49m[43m)[49m
[1;32m    340[0m [38;5;66;03m# Capture the output printed by GMT into this list. Will use it later[39;00m
[1;32m    341[0m [38;5;66;03m# to generate error messages for the exceptions raised by API calls.[39;00m
[1;32m    342[0m [38;5;28mself[39m[38;5;241m.[39m_error_log [38;5;241m=[39m []  [38;5;66;03m# pylint: disable=attribute-defined-outside-init[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/session.py:286[0m, in [0;36mSession.get_libgmt_func[0;34m(self, name, argtypes, restype)[0m
[1;32m    249[0m [38;5;124;03m"""[39;00m
[1;32m    250[0m [38;5;124;03mGet a ctypes function from the libgmt shared library.[39;00m
[1;32m    251[0m 
[0;32m   (...)[0m
[1;32m    282[0m [38;5;124;03m<class 'ctypes.CDLL.__init__.<locals>._FuncPtr'>[39;00m
[1;32m    283[0m [38;5;124;03m"""[39;00m
[1;32m    284[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mhasattr[39m([38;5;28mself[39m, [38;5;124m"[39m[38;5;124m_libgmt[39m[38;5;124m"[39m):
[1;32m    285[0m     [38;5;66;03m# pylint: disable=attribute-defined-outside-init[39;00m
[0;32m--> 286[0m     [38;5;28mself[39m[38;5;241m.[39m_libgmt [38;5;241m=[39m [43mload_libgmt[49m[43m([49m[43m)[49m
[1;32m    287[0m function [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m[38;5;241m.[39m_libgmt, name)
[1;32m    288[0m [38;5;28;01mif[39;00m argtypes [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pygmt/clib/loading.py:59[0m, in [0;36mload_libgmt[0;34m(lib_fullnames)[0m
[1;32m     56[0m         failing_libs[38;5;241m.[39mappend(libname)
[1;32m     58[0m [38;5;28;01mif[39;00m error:
[0;32m---> 59[0m     [38;5;28;01mraise[39;00m GMTCLibNotFoundError([38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(error_msg))
[1;32m     61[0m [38;5;28;01mreturn[39;00m libgmt

[0;31mGMTCLibNotFoundError[0m: Error loading GMT shared library at 'libgmt.so'.
libgmt.so: cannot open shared object file: No such file or directory
GMTCLibNotFoundError: Error loading GMT shared library at 'libgmt.so'.
libgmt.so: cannot open shared object file: No such file or directory

